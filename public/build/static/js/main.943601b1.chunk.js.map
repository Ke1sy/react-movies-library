{"version":3,"sources":["Components/Layouts/Header.jsx","Components/Layouts/Footer.jsx","Components/Layouts/Main.jsx","Components/theme.js","Components/Tabs/TabPanel.jsx","Components/Movies/TableContextMenu.jsx","Components/Movies/MoviesTable.jsx","Components/Buttons/AddButton.jsx","Components/Dialogs/styles.js","Components/Dialogs/MovieDialog.jsx","Components/Dialogs/DeleteDialog.jsx","Components/Search/Search.jsx","Components/Movies/Movies.jsx","queries/movies.js","mutations/movies.js","Components/Movies/MoviesContainer.jsx","Components/Dialogs/DirectorDialog.jsx","Components/Directors/DirectorsTable.jsx","Components/Directors/Directors.jsx","queries/directors.js","mutations/directors.js","Components/Directors/DirectorsContainer.jsx","Components/Tabs/Tabs.jsx","Components/Tabs/TabsContainer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","flexGrow","props","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","className","theme","footer","backgroundColor","palette","primary","main","typography","Footer","Container","maxWidth","root","Main","children","createMuiTheme","useNextVariants","type","secondary","blue","error","red","contrastThreshold","tonalOffset","contrastText","TabPanel","value","index","other","Paper","component","role","hidden","id","aria-labelledby","Box","p","menuItemText","paddingLeft","TableContextMenu","onEdit","onDelete","data","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","onClick","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","fontSize","table","minWidth","tableCell","padding","MoviesTable","movies","openCreateUpdateDialog","openDeleteDialog","movie","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","name","genre","rate","director","watched","key","scope","Checkbox","checked","disabled","inputProps","addIcon","marginRight","spacing","bottom","right","AddButton","Fab","dialog","paddingBottom","textAlign","formControl","marginTop","width","contentText","marginBottom","content","overflowX","MovieDialog","createUpdateMovie","isOpen","directors","actionType","setActionType","formData","setFormData","useEffect","ClearFormValues","handleChange","target","handleClose","Dialog","fullWidth","paper","DialogTitle","DialogContent","FormControl","TextField","autoFocus","label","required","onChange","select","FormControlLabel","control","DialogActions","Button","directorId","find","item","Number","DeleteDialog","setIsOpen","deleteAction","itemToDelete","aria-describedby","DialogContentText","margin","display","alignItems","input","marginLeft","flex","iconButton","Search","searchAction","placeholder","ariaLabel","liveSearch","searchValue","setSearchValue","typingTimeout","setTypingTimeout","onChangeAction","clearTimeout","setTimeout","onSubmit","e","preventDefault","InputBase","Movies","dialogIsOpen","selectedMovie","deleteDialogIsOpen","deleteMovie","moviesPageQuery","gql","addMovieMutation","updateMovieMutation","deleteMovieMutation","withGraphQLQuery","graphql","options","directorsName","variables","withGraphQLMutations","compose","mutate","addMovie","refetchQueries","query","updateMovie","setDialogIsOpen","setDeleteDialogIsOpen","setSelectedMovie","fetchMore","updateQuery","previousResult","fetchMoreResult","DirectorDialog","createUpdateDirector","age","textCenter","DirectorsTable","List","ListItem","ListItemText","Directors","selectedDirector","deleteDirector","directorsQuery","addDirectorMutation","updateDirectorMutation","deleteDirectorMutation","addDirector","updateDirector","setSelectedDirector","background","tab","text","MyTabs","tabsList","selectedTab","onChangeTab","findIndex","Tabs","newValue","indicatorColor","textColor","icon","Tab","TabsContainer","setSelectedTab","client","ApolloClient","uri","wrapper","height","flexDirection","App","ThemeProvider","disableGutters","Header","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.943601b1.chunk.js","sourcesContent":["import React from 'react';\nimport {AppBar, IconButton, Typography, Toolbar} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    title: {\n        flexGrow: 1,\n    },\n});\n\nexport default props => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Header\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n","import React from 'react';\nimport {Container, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.typography.color,\n    },\n}));\n\nconst Footer = () => {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <Container maxWidth={false}>\n                <Typography variant=\"h6\">\n                    Footer\n                </Typography>\n            </Container>\n        </footer>\n    )\n};\n\nexport default Footer;\n\n","import React from 'react';\nimport {Container} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#212121',\n    }\n});\n\nconst Main = (props) => {\n    const classes = useStyles();\n    return (\n        <Container maxWidth={false} className={classes.root}>\n            {props.children}\n        </Container>\n    )\n};\n\nexport default Main\n\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport {blue, red} from '@material-ui/core/colors';\r\n\r\nexport default createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n        color: '#fff',\r\n    },\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: '#e52e33'\r\n        },\r\n        secondary: blue,\r\n        error: red,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n        contrastText: '#fff',\r\n    }\r\n});","import React from \"react\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n    return (\r\n        <Paper\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={1}>{children}</Box>}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React, {useState} from \"react\";\r\nimport {IconButton, Menu, MenuItem, Typography} from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    menuItemText: {\r\n        paddingLeft: 10\r\n    },\r\n});\r\n\r\nconst TableContextMenu = ({onEdit, onDelete, data}) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = ({ currentTarget }) => {\r\n        setAnchorEl(currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={() => onEdit(data)}>\r\n                    <EditIcon fontSize=\"small\"/>\r\n                    <Typography variant=\"body2\" className={classes.menuItemText}>\r\n                        Edit\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={() => onDelete(data)}>\r\n                    <DeleteIcon fontSize=\"small\"/>\r\n                    <Typography variant=\"body2\" className={classes.menuItemText}>\r\n                        Delete\r\n                    </Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TableContextMenu;","import React from \"react\";\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Checkbox,\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TableContextMenu from \"./TableContextMenu\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableCell: {\r\n        padding: 5\r\n    }\r\n});\r\n\r\nconst MoviesTable = ({movies, openCreateUpdateDialog, openDeleteDialog}) => {\r\n    const classes = useStyles();\r\n\r\n    const onEdit = (movie) => {\r\n        openCreateUpdateDialog(true, movie);\r\n    };\r\n\r\n    const onDelete = (movie) => {\r\n        openDeleteDialog(true, movie);\r\n    };\r\n\r\n    return (\r\n        <TableContainer component={'div'}>\r\n            <Table className={classes.table} aria-label=\"caption table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell align=\"center\">Genre</TableCell>\r\n                        <TableCell align=\"center\">Rate</TableCell>\r\n                        <TableCell align=\"center\">Director</TableCell>\r\n                        <TableCell align=\"center\">Watched</TableCell>\r\n                        <TableCell align=\"right\"> </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {movies.map(({id, name, genre, rate, director, watched}) => (\r\n                        <TableRow key={id}>\r\n                            <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\r\n                                {name}\r\n                            </TableCell>\r\n                            <TableCell className={classes.tableCell} align=\"center\">{genre}</TableCell>\r\n                            <TableCell className={classes.tableCell} align=\"center\">{rate}</TableCell>\r\n                            <TableCell className={classes.tableCell} align=\"center\">{director ? director.name : null}</TableCell>\r\n                            <TableCell className={classes.tableCell} align=\"center\">\r\n                                <Checkbox\r\n                                    checked={watched}\r\n                                    disabled\r\n                                    color=\"primary\"\r\n                                    inputProps={{'aria-label': 'primary checkbox'}}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className={classes.tableCell} align=\"right\">\r\n                                <TableContextMenu\r\n                                    data={{id, name, genre, rate, director, watched}}\r\n                                    onEdit={onEdit}\r\n                                    onDelete={onDelete}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n};\r\n\r\nexport default MoviesTable","import React from 'react';\nimport {Fab} from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    addIcon: {\n        marginRight: theme.spacing(1),\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(2),\n    },\n}));\n\nconst AddButton = ({onClick}) => {\n    const classes = useStyles();\n    return (\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.addIcon} onClick={onClick}>\n            <AddIcon/>\n        </Fab>\n    )\n};\n\nexport default AddButton;\n\n\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    dialog: {\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(3),\r\n        width: '100%',\r\n    },\r\n\r\n    contentText: {\r\n        marginBottom: 0,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    content: {\r\n      overflowX: 'hidden'\r\n    }\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    TextField,\r\n    Checkbox,\r\n    MenuItem,\r\n    FormControl,\r\n    FormControlLabel\r\n} from '@material-ui/core';\r\nimport useStyles from \"./styles\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst MovieDialog = ({createUpdateMovie, isOpen, movie, directors, openCreateUpdateDialog}) => {\r\n    const classes = useStyles();\r\n    const [actionType, setActionType] = useState('add');\r\n    const [formData, setFormData] = useState({\r\n        id: null,\r\n        name: '',\r\n        genre: '',\r\n        rate: 0,\r\n        director: '',\r\n        watched: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (movie) {\r\n            setActionType('edit');\r\n            const {id, name, genre, rate, watched, director} = movie;\r\n            setFormData({\r\n                id,\r\n                name,\r\n                genre,\r\n                rate,\r\n                director: director ? director.name : '',\r\n                watched\r\n            })\r\n        } else {\r\n            setActionType('add');\r\n            ClearFormValues();\r\n        }\r\n    }, [movie]);\r\n\r\n    const handleChange = name => ({target}) => {\r\n        const {type, value} = target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: type === 'checkbox' ? target.checked : value\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        openCreateUpdateDialog(false);\r\n        ClearFormValues();\r\n    };\r\n\r\n    const createUpdateMovieSubmit = () => {\r\n        const { id, name, genre, rate, director, watched} = formData;\r\n        const directorId = director ? directors.find(item => item.name === director).id : null;\r\n        createUpdateMovie({\r\n            id,\r\n            name,\r\n            genre,\r\n            rate: Number(rate),\r\n            directorId,\r\n            watched\r\n        }, actionType);\r\n        handleClose();\r\n    };\r\n\r\n    const ClearFormValues = () => {\r\n        setFormData({\r\n            id: null,\r\n            name: '',\r\n            genre: '',\r\n            rate: '',\r\n            director: '',\r\n            watched: false\r\n        })\r\n    };\r\n\r\n    let {name, genre, rate, director, watched} = formData;\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"sm\"\r\n            fullWidth={true}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            className={classes.paper}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" className={classes.title}>\r\n                {\r\n                    actionType === 'add'\r\n                        ? 'Create New Movie'\r\n                        : 'Update Movie'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent className={classes.content}>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"movieName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        required={true}\r\n                        onChange={handleChange('name')}\r\n                    />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        id=\"movieGenre\"\r\n                        label=\"Genre\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={genre}\r\n                        required={true}\r\n                        onChange={handleChange('genre')}\r\n                    />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        id=\"movieRate\"\r\n                        label=\"Rate\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={rate}\r\n                        inputProps={{\r\n                            'min': \"1\",\r\n                            'max': \"10\"\r\n                        }}\r\n                        onChange={handleChange('rate')}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        id=\"movieDirector\"\r\n                        select\r\n                        fullWidth\r\n                        label=\"Director\"\r\n                        value={director}\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange('director')}\r\n                    >\r\n                        {directors.map(director => (\r\n                            <MenuItem key={director.id} value={director.name}>\r\n                                {director.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </FormControl>\r\n                <FormControlLabel className={classes.formControl}\r\n                                  control={<Checkbox checked={watched} onChange={handleChange('watched')} value=\"watched\"/>}\r\n                                  label=\"Watched movie\"\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    <CancelIcon fontSize=\"small\"/>Cancel\r\n                </Button>\r\n                <Button onClick={createUpdateMovieSubmit} color=\"primary\">\r\n                    <CheckCircleIcon fontSize=\"small\"/>\r\n                    {\r\n                        actionType === 'add'\r\n                            ? 'Create'\r\n                            : 'Update'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default MovieDialog;\r\n\r\n\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    DialogTitle,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n\r\nconst DeleteDialog = ({isOpen, setIsOpen, deleteAction, itemToDelete}) => {\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const deleteActionSubmit= () => {\r\n        deleteAction(itemToDelete.id);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you want to delete element?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        If you  click 'CONFIRM' the element will be removed from database.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        <CancelIcon fontSize=\"small\"/>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={deleteActionSubmit} color=\"primary\" autoFocus>\r\n                        <DeleteIcon fontSize=\"small\"/>\r\n                        Confirm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteDialog;","import React, {useState} from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: '15px 0',\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        color: theme.palette.primary.main\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n        color: theme.palette.primary.main\r\n    },\r\n}));\r\n\r\nconst Search = ({searchAction, placeholder, ariaLabel, liveSearch}) => {\r\n    const classes = useStyles();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [typingTimeout, setTypingTimeout] = useState(null);\r\n\r\n    const handleLiveChange = ({target: {value}})  => {\r\n        if (typingTimeout) {\r\n            clearTimeout(typingTimeout);\r\n        }\r\n        setSearchValue(value);\r\n        setTypingTimeout(setTimeout( () => {\r\n            searchAction(value);\r\n        }, 300));\r\n    };\r\n\r\n    const handleChange = ({target: {value}}) => {\r\n        setSearchValue(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchAction(searchValue);\r\n    };\r\n\r\n    const onChangeAction = liveSearch ? handleLiveChange : handleChange;\r\n\r\n    return (\r\n        <>\r\n            <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n                <InputBase\r\n                    onChange={onChangeAction}\r\n                    className={classes.input}\r\n                    placeholder={placeholder}\r\n                    value={searchValue}\r\n                    inputProps={{\r\n                        'aria-label': ariaLabel,\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport AddButton from \"../Buttons/AddButton\";\r\nimport MovieDialog from \"../Dialogs/MovieDialog\";\r\nimport DeleteDialog from \"../Dialogs/DeleteDialog\";\r\nimport Search from \"../Search/Search\";\r\n\r\nconst Movies = ({\r\n                    movies,\r\n                    directors,\r\n                    createUpdateMovie,\r\n                    dialogIsOpen,\r\n                    selectedMovie,\r\n                    openCreateUpdateDialog,\r\n                    deleteDialogIsOpen,\r\n                    openDeleteDialog,\r\n                    deleteMovie,\r\n                    searchAction\r\n                }) => {\r\n    return (\r\n        <>\r\n            <Search\r\n                searchAction={searchAction}\r\n                liveSearch={true}\r\n                placeholder='Search Movie'\r\n                ariaLabel='Search Movie'\r\n            />\r\n            <MovieDialog\r\n                createUpdateMovie={createUpdateMovie}\r\n                isOpen={dialogIsOpen}\r\n                movie={selectedMovie}\r\n                directors={directors}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n            />\r\n            <DeleteDialog\r\n                isOpen={deleteDialogIsOpen}\r\n                setIsOpen={openDeleteDialog}\r\n                deleteAction={deleteMovie}\r\n                itemToDelete={selectedMovie}\r\n            />\r\n            <MoviesTable\r\n                movies={movies}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                openDeleteDialog={openDeleteDialog}\r\n            />\r\n            <AddButton onClick={() => openCreateUpdateDialog(true)}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Movies","import {gql} from 'apollo-boost';\r\n\r\nexport const moviesPageQuery = gql`\r\n    query moviesPageQuery($name: String, $directorsName: String) {\r\n        movies(name: $name) {\r\n            id,\r\n            name,\r\n            genre,\r\n            director {\r\n                name\r\n            },\r\n            rate,\r\n            watched\r\n         },\r\n        directors(name: $directorsName) {\r\n            id,\r\n            name\r\n         }\r\n     }\r\n`;\r\n\r\n\r\nexport const directorsQuery = gql`\r\n    query directorsQuery($name: String) {\r\n        directors(name: $name) {\r\n            id,\r\n            name\r\n        }\r\n     }\r\n`;","import {gql} from 'apollo-boost';\r\n\r\nexport const addMovieMutation = gql`\r\n    mutation addMovie($name: String!, $genre: String!, $directorId: ID,  $rate: Int!, $watched: Boolean!) {\r\n         addMovie(name: $name, genre: $genre, rate: $rate, watched: $watched, directorId: $directorId) {\r\n            name\r\n         }\r\n     }\r\n`;\r\n\r\nexport const updateMovieMutation = gql`\r\n    mutation updateMovie($id: ID, $name: String!, $genre: String!, $directorId: ID, $rate: Int!, $watched: Boolean!) {\r\n         updateMovie(id: $id, name: $name, genre: $genre, rate: $rate, watched: $watched, directorId: $directorId ) {\r\n            name\r\n         }\r\n     }\r\n`;\r\n\r\nexport const deleteMovieMutation = gql`\r\n    mutation deleteMovie($id: ID) {\r\n         deleteMovie(id: $id) {\r\n            name\r\n         }\r\n     }\r\n`;","import React, {useState} from \"react\";\r\nimport Movies from \"./Movies\";\r\nimport {compose} from 'recompose';\r\nimport {graphql} from 'react-apollo';\r\nimport {moviesPageQuery} from '../../queries/movies';\r\nimport {addMovieMutation, deleteMovieMutation, updateMovieMutation} from '../../mutations/movies';\r\n\r\n\r\nconst MoviesContainer = ({data, addMovie, deleteMovie, updateMovie}) => {\r\n    const {movies = [], directors = []} = data;\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n    const openCreateUpdateDialog = (value, movie) => {\r\n        setSelectedMovie(movie ? movie : null);\r\n        setDialogIsOpen(value);\r\n    };\r\n\r\n    const openDeleteDialog = (value, movie) => {\r\n        setSelectedMovie(movie ? movie : null);\r\n        setDeleteDialogIsOpen(value);\r\n    };\r\n\r\n    const createUpdateMovieAction = (formData, type) => {\r\n        switch (type) {\r\n            case 'add':\r\n                addMovie(formData);\r\n                break;\r\n            case 'edit':\r\n                updateMovie(formData);\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n    };\r\n\r\n    const searchMovieAction = (searchValue) => {\r\n        data.fetchMore({\r\n            variables: {name: searchValue},\r\n            updateQuery: (previousResult, {fetchMoreResult})  => fetchMoreResult\r\n        })\r\n    };\r\n\r\n    const deleteMovieAction = (id) => {\r\n        deleteMovie({id});\r\n        setDeleteDialogIsOpen(false);\r\n        setSelectedMovie(null);\r\n    };\r\n\r\n    return (\r\n        <Movies\r\n            movies={movies}\r\n            directors={directors}\r\n            createUpdateMovie={createUpdateMovieAction}\r\n            dialogIsOpen={dialogIsOpen}\r\n            selectedMovie={selectedMovie}\r\n            openCreateUpdateDialog={openCreateUpdateDialog}\r\n            deleteDialogIsOpen={deleteDialogIsOpen}\r\n            openDeleteDialog={openDeleteDialog}\r\n            deleteMovie={deleteMovieAction}\r\n            searchAction={searchMovieAction}\r\n        />\r\n    )\r\n};\r\n\r\nconst withGraphQLQuery = graphql(moviesPageQuery, {\r\n    options: ({name = '', directorsName=''}) => ({\r\n        variables: {name, directorsName}\r\n    })\r\n});\r\n\r\nconst withGraphQLMutations = compose(\r\n    graphql(addMovieMutation, {\r\n        props: ({mutate}) => ({\r\n            addMovie: movie => mutate({\r\n                variables: movie,\r\n                refetchQueries: [{\r\n                    query: moviesPageQuery,\r\n                    variables: {name: '', directorsName: ''}\r\n                }]\r\n            })\r\n        })\r\n    }),\r\n    graphql(updateMovieMutation, {\r\n        props: ({mutate}) => ({\r\n            updateMovie: movie => mutate({\r\n                variables: movie,\r\n                refetchQueries: [{\r\n                    query: moviesPageQuery,\r\n                    variables: {name: '', directorsName: ''}\r\n                }]\r\n            })\r\n        })\r\n    }),\r\n    graphql(deleteMovieMutation, {\r\n        props: ({mutate}) => ({\r\n            deleteMovie: id => mutate({\r\n                variables: id,\r\n                refetchQueries: [{\r\n                    query: moviesPageQuery,\r\n                    variables: {name: '', directorsName: ''}\r\n                }]\r\n            })\r\n        })\r\n    }),\r\n\r\n);\r\n\r\nexport default compose(\r\n    withGraphQLQuery,\r\n    withGraphQLMutations\r\n)(MoviesContainer);","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    TextField,\r\n    FormControl,\r\n} from '@material-ui/core';\r\nimport useStyles from \"./styles\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst DirectorDialog = ({createUpdateDirector, isOpen, director, openCreateUpdateDialog}) => {\r\n    const classes = useStyles();\r\n    const [actionType, setActionType] = useState('add');\r\n    const [formData, setFormData] = useState({\r\n        id: null,\r\n        name: '',\r\n        age: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (director) {\r\n            setActionType('edit');\r\n            const {name, age, id} = director;\r\n            setFormData({\r\n                name, age, id\r\n            })\r\n        } else {\r\n            setActionType('add');\r\n            ClearFormValues();\r\n        }\r\n    }, [director]);\r\n\r\n    const handleChange = name => ({target: {value}}) => {\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        openCreateUpdateDialog(false);\r\n        ClearFormValues();\r\n    };\r\n\r\n    const createUpdateDirectorSubmit = () => {\r\n        createUpdateDirector({...formData, age: Number(age)}, actionType);\r\n        handleClose();\r\n    };\r\n\r\n    const ClearFormValues = () => {\r\n        setFormData({\r\n            id: null,\r\n            name: '',\r\n            age: 0,\r\n        })\r\n    };\r\n\r\n    let {name, age} = formData;\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"xs\"\r\n            fullWidth={true}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            className={classes.paper}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" className={classes.title}>\r\n                {\r\n                    actionType === 'add'\r\n                        ? 'Create New Director'\r\n                        : 'Update Director'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent className={classes.content}>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"directorName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        required={true}\r\n                        onChange={handleChange('name')}\r\n                    />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                        id=\"directorAge\"\r\n                        label=\"Age\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={age}\r\n                        type=\"number\"\r\n                        required={true}\r\n                        onChange={handleChange('age')}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    <CancelIcon fontSize=\"small\"/>Cancel\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={createUpdateDirectorSubmit} color=\"primary\">\r\n                    <CheckCircleIcon fontSize=\"small\"/>\r\n                    {\r\n                        actionType === 'add'\r\n                            ? 'Create'\r\n                            : 'Update'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default DirectorDialog;\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TableContextMenu from \"../Movies/TableContextMenu\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableCell: {\r\n        padding: 5\r\n    },\r\n\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst DirectorsTable = ({directors, openCreateUpdateDialog, openDeleteDialog}) => {\r\n    const classes = useStyles();\r\n\r\n    const onEdit = (director) => {\r\n        openCreateUpdateDialog(true, director);\r\n    };\r\n\r\n    const onDelete = (director) => {\r\n        openDeleteDialog(true, director);\r\n    };\r\n    return (\r\n        <TableContainer component={'div'}>\r\n            <Table className={classes.table} aria-label=\"caption table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell align=\"center\">Age</TableCell>\r\n                        <TableCell align=\"center\">Movies</TableCell>\r\n                        <TableCell align=\"right\"> </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {directors.map(({id, name, age, movies}) => (\r\n                        <TableRow key={id}>\r\n                            <TableCell  className={classes.tableCell} component=\"th\" scope=\"row\">\r\n                                {name}\r\n                            </TableCell>\r\n                            <TableCell  className={classes.tableCell} align=\"center\">{age}</TableCell>\r\n                            <TableCell  className={classes.tableCell} align=\"left\">\r\n                                <List>\r\n                                    {movies.map((movie, index) =>\r\n                                        <ListItem key={movie.id} className={classes.textCenter}>\r\n                                            <ListItemText\r\n                                                primary={index + 1 + '. ' + movie.name}\r\n                                            />\r\n                                        </ListItem>,\r\n                                    )}\r\n                                </List>\r\n                            </TableCell>\r\n                            <TableCell  className={classes.tableCell} align=\"right\">\r\n                                <TableContextMenu\r\n                                    data={{id, name, age}}\r\n                                    onEdit={onEdit}\r\n                                    onDelete={onDelete}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n};\r\n\r\nexport default DirectorsTable","import React from \"react\";\r\nimport AddButton from \"../Buttons/AddButton\";\r\nimport DirectorDialog from \"../Dialogs/DirectorDialog\";\r\nimport DirectorsTable from \"./DirectorsTable\";\r\nimport DeleteDialog from \"../Dialogs/DeleteDialog\";\r\nimport Search from \"../Search/Search\";\r\n\r\nconst Directors = ({\r\n                       createUpdateDirector,\r\n                       dialogIsOpen,\r\n                       selectedDirector,\r\n                       directors,\r\n                       openCreateUpdateDialog,\r\n                       openDeleteDialog,\r\n                       deleteDialogIsOpen,\r\n                       deleteDirector,\r\n                       searchAction\r\n                   }) => {\r\n    return (\r\n        <>\r\n            <Search\r\n                searchAction={searchAction}\r\n                liveSearch={true}\r\n                placeholder='Search Director'\r\n                ariaLabel='Search Director'\r\n            />\r\n            <DirectorDialog\r\n                createUpdateDirector={createUpdateDirector}\r\n                isOpen={dialogIsOpen}\r\n                director={selectedDirector}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n            />\r\n            <DeleteDialog\r\n                isOpen={deleteDialogIsOpen}\r\n                setIsOpen={openDeleteDialog}\r\n                deleteAction={deleteDirector}\r\n                itemToDelete={selectedDirector}\r\n            />\r\n            <DirectorsTable\r\n                directors={directors}\r\n                openCreateUpdateDialog={openCreateUpdateDialog}\r\n                openDeleteDialog={openDeleteDialog}\r\n            />\r\n            <AddButton onClick={() => openCreateUpdateDialog(true)}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Directors","import {gql} from 'apollo-boost';\r\n\r\nexport const directorsQuery = gql`\r\n    query directorsQuery($name: String) {\r\n         directors(name: $name) {\r\n            id,\r\n            name,\r\n            age,\r\n            movies {\r\n                id,\r\n                name\r\n            }\r\n         }\r\n     }\r\n`;","import {gql} from 'apollo-boost';\r\n\r\nexport const addDirectorMutation = gql`\r\n    mutation addDirector($name: String!, $age: Int!) {\r\n         addDirector(name: $name, age: $age) {\r\n            name\r\n         }\r\n     }\r\n`;\r\n\r\nexport const updateDirectorMutation = gql`\r\n   mutation updateDirector($id: ID, $name: String!, $age: Int!) {\r\n        updateDirector(id: $id, name: $name, age: $age) {\r\n            name\r\n            age\r\n        }\r\n    }\r\n`;\r\n\r\nexport const deleteDirectorMutation = gql`\r\n    mutation deleteDirector($id: ID) {\r\n         deleteDirector(id: $id) {\r\n            name\r\n         }\r\n     }\r\n`;","import React, {useState} from \"react\";\r\nimport Directors from \"./Directors\";\r\nimport {compose} from \"recompose\";\r\nimport {graphql} from \"react-apollo\";\r\nimport {directorsQuery} from \"../../queries/directors\";\r\nimport {addDirectorMutation, deleteDirectorMutation, updateDirectorMutation} from \"../../mutations/directors\";\r\n\r\nconst DirectorsContainer = ({data, addDirector, deleteDirector, updateDirector}) => {\r\n    const {directors = []} = data;\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [deleteDialogIsOpen, setDeleteDialogIsOpen] = useState(false);\r\n    const [selectedDirector, setSelectedDirector] = useState(null);\r\n\r\n    const openCreateUpdateDialog = (value, director) => {\r\n        setSelectedDirector(director ? director : null);\r\n        setDialogIsOpen(value);\r\n    };\r\n\r\n    const openDeleteDialog = (value, director) => {\r\n        setSelectedDirector(director);\r\n        setDeleteDialogIsOpen(value);\r\n    };\r\n\r\n    const createUpdateDirectorAction = (formData, type) => {\r\n        switch (type) {\r\n            case 'add':\r\n                addDirector(formData);\r\n                break;\r\n            case 'edit':\r\n                updateDirector(formData);\r\n                break;\r\n            default:\r\n                return false\r\n        }\r\n    };\r\n\r\n    const deleteDirectorAction = (id) => {\r\n        deleteDirector({id});\r\n        setDeleteDialogIsOpen(false);\r\n        setSelectedDirector(null)\r\n    };\r\n\r\n    const searchDirectorAction = (searchValue) => {\r\n        data.fetchMore({\r\n            variables: {name: searchValue},\r\n            updateQuery: (previousResult, {fetchMoreResult})  => fetchMoreResult\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Directors\r\n            directors={directors}\r\n            createUpdateDirector={createUpdateDirectorAction}\r\n            dialogIsOpen={dialogIsOpen}\r\n            deleteDialogIsOpen={deleteDialogIsOpen}\r\n            selectedDirector={selectedDirector}\r\n            openCreateUpdateDialog={openCreateUpdateDialog}\r\n            openDeleteDialog={openDeleteDialog}\r\n            deleteDirector={deleteDirectorAction}\r\n            searchAction={searchDirectorAction}\r\n        />\r\n    )\r\n};\r\n\r\nconst withGraphQLQuery = graphql(directorsQuery, {\r\n    options: ({name = ''}) => ({\r\n        variables: {name}\r\n    })\r\n});\r\n\r\nconst withGraphQLMutations = compose(\r\n    graphql(addDirectorMutation, {\r\n        props: ({mutate}) => ({\r\n            addDirector: director => mutate({\r\n                variables: director,\r\n                refetchQueries: [{\r\n                    query: directorsQuery,\r\n                    variables: {name: ''}\r\n                }]\r\n            })\r\n        })\r\n    }),\r\n    graphql(updateDirectorMutation, {\r\n        props: ({mutate}) => ({\r\n            updateDirector: director => mutate({\r\n                variables: director,\r\n                refetchQueries: [{\r\n                    query: directorsQuery,\r\n                    variables: {name: ''}\r\n                }]\r\n            })\r\n        })\r\n    }),\r\n    graphql(deleteDirectorMutation, {\r\n        props: ({mutate}) => ({\r\n            deleteDirector: id => mutate({\r\n                variables: id,\r\n                refetchQueries: [{\r\n                    query: directorsQuery,\r\n                    variables: {name: ''}\r\n                }]\r\n            })\r\n        })\r\n    })\r\n);\r\n\r\n\r\nexport default compose(\r\n    withGraphQLQuery,\r\n    withGraphQLMutations\r\n)(DirectorsContainer);\r\n","import React from \"react\";\r\nimport {Paper, Tabs, Tab} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport MoviesContainer from \"../Movies/MoviesContainer\";\r\nimport DirectorsContainer from \"../Directors/DirectorsContainer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n    tab: {\r\n        \"&.Mui-selected\": {\r\n            color: theme.palette.text.secondary\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst MyTabs = ({tabsList, selectedTab, onChangeTab}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (e, newValue) => {\r\n        onChangeTab(tabsList[newValue - 1]);\r\n    };\r\n\r\n    const index = selectedTab ? tabsList.findIndex(tab => tab === selectedTab) + 1 : 0;\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n            <Tabs\r\n                value={index}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n            >\r\n                {tabsList.map(({title, id, icon}) =>\r\n                    <Tab\r\n                        label={title}\r\n                        icon={icon}\r\n                        key={id}\r\n                        className={classes.tab}\r\n                    />\r\n                )}\r\n            </Tabs>\r\n            <TabPanel value={index} index={0}>\r\n               <MoviesContainer/>\r\n            </TabPanel>\r\n            <TabPanel value={index} index={1}>\r\n                <DirectorsContainer/>\r\n            </TabPanel>\r\n        </Paper>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyTabs","import React, {useState} from \"react\";\r\nimport MyTabs from \"./Tabs\";\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst tabsList = [\r\n    {\r\n        id: 1,\r\n        title: 'Movies',\r\n        icon: <MovieIcon/>\r\n    }, {\r\n        id: 2,\r\n        title: 'Directors',\r\n        icon: <VideocamIcon/>\r\n    }\r\n];\r\n\r\nconst TabsContainer = () => {\r\n    const [selectedTab, setSelectedTab] = useState(null);\r\n\r\n    const onChangeTab = id => {\r\n        setSelectedTab(id);\r\n    };\r\n\r\n    return (\r\n        <MyTabs\r\n            tabsList={tabsList}\r\n            selectedTab={selectedTab}\r\n            onChangeTab={onChangeTab}\r\n        />\r\n    )\r\n};\r\n\r\nexport default TabsContainer;","import React from 'react';\nimport {Header, Footer, Main} from './Components/Layouts'\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from './Components/theme'\nimport {Container} from '@material-ui/core';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TabsContainer from \"./Components/Tabs/TabsContainer\";\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n\nconst client = new ApolloClient({\n    uri: '/graphql'\n});\n\nconst useStyles = makeStyles(theme => ({\n    wrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.paper\n    }\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <ApolloProvider client={client}>\n            <ThemeProvider theme={theme}>\n                <Container maxWidth=\"xl\" disableGutters className={classes.wrapper}>\n                    <Header/>\n                    <Main>\n                        <TabsContainer/>\n                    </Main>\n                    <Footer/>\n                </Container>\n            </ThemeProvider>\n        </ApolloProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}